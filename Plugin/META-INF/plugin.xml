<idea-plugin version="2">
  <id>com.ac.gla.teamL.ebnf</id>
  <name>EBNF Plugin</name>
  <version>0.1</version>
  <vendor email="support@yourcompany.com" url="http://www.yourcompany.com">The L Team.</vendor>

  <description><![CDATA[
      Does EBNF stuff.<br>
      <em>Sup?</em>
    ]]></description>

  <change-notes><![CDATA[
      Now it Exists!<br>
    ]]>
  </change-notes>

  <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="131"/>

  <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <extensions defaultExtensionNs="com.intellij">
    <fileTypeFactory implementation="uk.ac.gla.teamL.EBNFFileTypeFactory"/>

    <lang.parserDefinition language="EBNF" implementationClass="uk.ac.gla.teamL.parser.EBNFParserDefinition"/>
    <lang.syntaxHighlighterFactory key="EBNF" implementationClass="uk.ac.gla.teamL.editor.EBNFSyntaxHighlighterFactory"/>
    <lang.commenter language="EBNF" implementationClass="uk.ac.gla.teamL.editor.EBNFCommenter"/>
    <completion.contributor language="EBNF" implementationClass="uk.ac.gla.teamL.editor.contributors.EBNFCompletionContributor"/>

    <colorSettingsPage implementation="uk.ac.gla.teamL.EBNFColourSettingsPage"/>

    <lang.findUsagesProvider language="EBNF" implementationClass="uk.ac.gla.teamL.editor.EBNFFindUsagesProvider"/>

    <annotator language="EBNF" implementationClass="uk.ac.gla.teamL.inspections.annotators.EBNFRangeErrorAnnotator"/>
    <annotator language="EBNF" implementationClass="uk.ac.gla.teamL.inspections.annotators.EBNFAnnotationAnnotator"/>

    <localInspection language="EBNF" shortName="EBNFUnusedRuleInspection" displayName="Unused rule" groupName="Grammar Inspections"
                     enabledByDefault="true" level="WARNING" implementationClass="uk.ac.gla.teamL.inspections.EBNFUnusedRuleInspection"/>
    <localInspection language="EBNF" shortName="EBNFUndeclaredIdentifierInspection" displayName="Unrecognised Reference" groupName="Grammar Inspections"
                     enabledByDefault="true" level="WARNING" implementationClass="uk.ac.gla.teamL.inspections.EBNFUndeclaredRuleInspection"/>
    <localInspection language="EBNF" shortName="EBNFDuplicateRuleInspection" displayName="Duplicate Reference" groupName="Grammar Inspections"
                     enabledByDefault="true" level="ERROR" implementationClass="uk.ac.gla.teamL.inspections.EBNFDuplicateRuleInspection"/>

    <codeInsight.lineMarkerProvider language="EBNF" implementationClass="uk.ac.gla.teamL.editor.EBNFRecursiveLineMarkerProvider"/>
    <elementDescriptionProvider implementation="uk.ac.gla.teamL.EBNFDescriptionProvider"/>
    <gotoSymbolContributor implementation="uk.ac.gla.teamL.editor.contributors.EBNFChooseByNameContributor"/>
    <defaultLiveTemplatesProvider implementation="uk.ac.gla.teamL.editor.EBNFDefaultLiveTemplateProvider"/>
    <lang.psiStructureViewFactory language="EBNF" implementationClass="uk.ac.gla.teamL.editor.structureView.EBNFStructureViewFactory"/>
    <lang.namesValidator language="EBNF" implementationClass="uk.ac.gla.teamL.inspections.validator.EBNFNamesValidator"/>
    <lang.braceMatcher language="EBNF" implementationClass="uk.ac.gla.teamL.editor.EBNFBraceMatcher"/>

  </extensions>

  <application-components>
    <!-- Add your application components here -->
  </application-components>

  <project-components>
    <!-- Add your project components here -->
  </project-components>

  <actions>
    <!-- Add your actions here -->
    <action id="uk.ac.gla.teamL.actions.EBNFGenerateAntlr" class="uk.ac.gla.teamL.actions.EBNFGenerateAntlr"
            text="Generate Antlr3 Code..." description="Convert eBNF code into Antlr3">
      <add-to-group group-id="CodeMenu" anchor="first"/>
    </action>
  </actions>

</idea-plugin>
