let program = assignment*;

let assignment =  annotation* 'let' identifier '=' rules ';';

let rules = ruleElement ('|'?  ruleElement)*;

let ruleElement = predicate?
                  ( string
                    | identifier
                    | range
                    | nestedRules
                    | any
                  ) quantifier?;

let nestedRules = "(" rules ")";

let quantifier = '*'
                 | '?'
                 | '+'
                 | arbitraryQuantifier;

let annotation = '@' identifier;

let arbitraryQuantifier = '{' number (',' number)? '}';

let range = '['string '..'']';

let identifier = char+;

let string = ('"' | "'") (char | number | whitespace)* ('"' | "'");

@Literal let predicate =     '!' ;
@Literal let any = '.';

let char = ['A'..'z']   ;
let number = ['0'..'9'];

@Ignored let linebreak = '\n' | '\r';
@Ignored let whitespace = ' ' | '\t';

@Ignored let lineComment = '//' (char | number | whitespace)*;
@Ignored let blockComment = '/*' (char | number | whitespace | linebreak)* '*/';
