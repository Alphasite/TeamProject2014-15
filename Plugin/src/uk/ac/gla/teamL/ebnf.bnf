// This was created using guidance from http://jflex.de/manual.html
// and https://github.com/JetBrains/Grammar-Kit/blob/master/TUTORIAL.md

{
  parserUtilClass="uk.ac.gla.teamL.EBNFParserUtil"
	tokens = [
		character = 'regexp:(a-Z)'
        digit = 'regexp:(0-9)'
        nonTerminalSymbols = 'regexp:(-_)'

		comment_singleline = "regexp://[^\n]*"
		comment_block = "regexp:/\*[^*\\]*\*/"

		ID = "regexp:[A-z][A-z|0-9|_]*"

		// Match all characters except the outer character, unless it is
		// escaped using the '\' character.
		// Strings can be enclosed in: "..." OR '...'
		string_doubleQuotes = 'regexp:"([^"\\]|\\.)*"'
		string_singleQuotes = "regexp:'([^'\\]|\\.)*'"
		string_tripleQuotes = "regexp:'''([^'''\\]|\\.)*'''"

		lineBreak = "regexp:\r|\n|\r\n"

		EQ = '='
		OR = '|'
		AND = ','

		LB = '('
		RB = ')'
		LOB = '{'
		ROB = '}'

		REPEAT = "*"
		ZERO_OR_ONE = "?"
		ONE_OR_MORE = "+"

		TERMINAL = ';'
	]
}

program ::= ( assignment
			| comment
			| lineBreak
			) *

comment ::= comment_singleline
		  | comment_block

assignment ::= identifier EQ rule TERMINAL

rule ::= ruleElement OR {rule}*
	   | ruleElement {rule}*

ruleElement ::= ( string
			    | identifier
			    | nestedRule
			    | optionalRule
			    ) {REPEAT|ZERO_OR_ONE|ONE_OR_MORE}?

nestedRule ::= LB rule RB
optionalRule ::= LOB rule ROB

string ::= string_singleQuotes
		 | string_doubleQuotes
		 | string_tripleQuotes

identifier ::= ID
