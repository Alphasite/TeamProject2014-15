let program = assignment*;

let assignment =  annotation* 'let' identifier '=' rules ';';

let rules = ruleElement ('|'? ruleElement)*;

let ruleElement = predicate?
	            ( string
	            | identifier
	            | range
	            | nestedRules
	            | any
	            ) quantifier?;

let nestedRules = "(" rules ")";

let quantifier = '*'
	 		   | '?'
	 		   | '+'
			   | arbitraryQuantifier;

let annotation = '@' identifier;

let arbitraryQuantifier = '{' number (',' number)? '}';

let range = '['  string '..'  ']';

let identifier = character+;

let string = ('"'|"'") (character | number | whitespace)* ('"'|"'");

@Literal let predicate = '!';
@Literal let any = '.';

let character = ['A'..'z'];
let number = ['0'..'9'];

@Ignored let linebreak = '\n' | '\r';
@Ignored let whitespace = ' ' | '\t';
@Ignored let lineComment = '//' (character | number | whitespace)*;
@Ignored let blockComment = '/*' (character | number | whitespace | linebreak)* '*/';
